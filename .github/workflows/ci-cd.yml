name: CI/CD Pipeline

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t vivek512/flask:latest .

      - name: Push Docker Image
        run: docker push vivek512/flask:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set up KubeConfig
        run: |
          echo "" | base64 -d > kubeconfig
          mv kubeconfig $HOME/.kube/config
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.27.0'

      - name: Update Kubernetes Deployment
        run: |
          kubectl set image deployment/flask-app flask-container=vivek512/flask:latest
          kubectl rollout status deployment/flask-app
